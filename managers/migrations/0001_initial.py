# Generated by Django 4.2 on 2024-01-27 05:22

from django.db import migrations, models
import managers.usermanager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=40, unique=True, verbose_name='ФИО')),
                ('number', models.CharField(max_length=13, verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Дата создание')),
                ('amount_of_trade', models.IntegerField(null=True, verbose_name='Количество сделок')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Менеджеры',
                'verbose_name_plural': 'Менеджеры',
            },
            managers=[
                ('objects', managers.usermanager.CustomUserManager()),
            ],
        ),
    ]
